
local tile_names = require "api.tile_names"

-- local sets = require "api.sets"

-- local bad = {
--     "out-of-map",
--     "tile-unknown",
--     "space-platform-foundation",
--     "empty-space",
-- }

-- -- All vanilla tiles
-- local base = {
--     "acid-refined-concrete",
--     "black-refined-concrete",
--     "blue-refined-concrete",
--     "brown-refined-concrete",
--     "concrete",
--     "cyan-refined-concrete",
--     "deepwater",
--     "deepwater-green",
--     "dirt-1",
--     "dirt-2",
--     "dirt-3",
--     "dirt-4",
--     "dirt-5",
--     "dirt-6",
--     "dirt-7",
--     "dry-dirt",
--     "grass-1",
--     "grass-2",
--     "grass-3",
--     "grass-4",
--     "green-refined-concrete",
--     "hazard-concrete-left",
--     "hazard-concrete-right",
--     "lab-dark-1",
--     "lab-dark-2",
--     "lab-white",
--     "landfill",
--     "nuclear-ground",
--     "orange-refined-concrete",
--     "out-of-map",
--     "pink-refined-concrete",
--     "purple-refined-concrete",
--     "red-desert-0",
--     "red-desert-1",
--     "red-desert-2",
--     "red-desert-3",
--     "red-refined-concrete",
--     "refined-concrete",
--     "refined-hazard-concrete-left",
--     "refined-hazard-concrete-right",
--     "sand-1",
--     "sand-2",
--     "sand-3",
--     "stone-path",
--     "tile-unknown",
--     "tutorial-grid",
--     "water",
--     "water-green",
--     "water-mud",
--     "water-shallow",
--     "water-wube",
--     "yellow-refined-concrete"
-- }

-- -- Take out the bad tiles, you don't want to see these ones anywhere ever.
-- base = sets.difference(sets.new(base), sets.new(bad))

-- -- All vanilla tiles (Space Age included)
-- local space_age = {
--     "tile-unknown",
--     "water-wube",
--     "out-of-map",
--     "deepwater",
--     "deepwater-green",
--     "water",
--     "water-green",
--     "water-shallow",
--     "water-mud",
--     "grass-1",
--     "grass-2",
--     "grass-3",
--     "grass-4",
--     "dry-dirt",
--     "dirt-1",
--     "dirt-2",
--     "dirt-3",
--     "dirt-4",
--     "dirt-5",
--     "dirt-6",
--     "dirt-7",
--     "sand-1",
--     "sand-2",
--     "sand-3",
--     "red-desert-0",
--     "red-desert-1",
--     "red-desert-2",
--     "red-desert-3",
--     "nuclear-ground",
--     "stone-path",
--     "lab-dark-1",
--     "lab-dark-2",
--     "lab-white",
--     "tutorial-grid",
--     "concrete",
--     "hazard-concrete-left",
--     "hazard-concrete-right",
--     "refined-concrete",
--     "refined-hazard-concrete-left",
--     "refined-hazard-concrete-right",
--     "landfill",
--     "red-refined-concrete",
--     "green-refined-concrete",
--     "blue-refined-concrete",
--     "orange-refined-concrete",
--     "yellow-refined-concrete",
--     "pink-refined-concrete",
--     "purple-refined-concrete",
--     "black-refined-concrete",
--     "brown-refined-concrete",
--     "cyan-refined-concrete",
--     "acid-refined-concrete",
--     "empty-space",
--     "space-platform-foundation",
--     "foundation",
--     "volcanic-jagged-ground",
--     "lava",
--     "lava-hot",
--     "volcanic-cracks-hot",
--     "volcanic-cracks-warm",
--     "volcanic-cracks",
--     "volcanic-folds-flat",
--     "volcanic-ash-light",
--     "volcanic-ash-dark",
--     "volcanic-ash-flats",
--     "volcanic-pumice-stones",
--     "volcanic-smooth-stone",
--     "volcanic-smooth-stone-warm",
--     "volcanic-ash-cracks",
--     "volcanic-folds",
--     "volcanic-folds-warm",
--     "volcanic-soil-dark",
--     "volcanic-soil-light",
--     "volcanic-ash-soil",
--     "artificial-yumako-soil",
--     "overgrowth-yumako-soil",
--     "artificial-jellynut-soil",
--     "overgrowth-jellynut-soil",
--     "natural-yumako-soil",
--     "natural-jellynut-soil",
--     "lowland-olive-blubber",
--     "lowland-olive-blubber-2",
--     "lowland-olive-blubber-3",
--     "lowland-brown-blubber",
--     "lowland-pale-green",
--     "lowland-cream-cauliflower-2",
--     "lowland-cream-cauliflower",
--     "lowland-dead-skin",
--     "lowland-dead-skin-2",
--     "lowland-cream-red",
--     "lowland-red-vein-2",
--     "lowland-red-vein",
--     "lowland-red-vein-3",
--     "lowland-red-vein-4",
--     "lowland-red-vein-dead",
--     "lowland-red-infection",
--     "midland-cracked-lichen",
--     "midland-cracked-lichen-dull",
--     "midland-cracked-lichen-dark",
--     "midland-turquoise-bark-2",
--     "midland-turquoise-bark",
--     "midland-yellow-crust-3",
--     "midland-yellow-crust-2",
--     "midland-yellow-crust",
--     "midland-yellow-crust-4",
--     "highland-dark-rock",
--     "highland-dark-rock-2",
--     "highland-yellow-rock",
--     "pit-rock",
--     "wetland-yumako",
--     "wetland-jellynut",
--     "wetland-dead-skin",
--     "wetland-light-dead-skin",
--     "wetland-green-slime",
--     "wetland-light-green-slime",
--     "wetland-red-tentacle",
--     "wetland-pink-tentacle",
--     "wetland-blue-slime",
--     "gleba-deep-lake",
--     "fulgoran-dust",
--     "fulgoran-dunes",
--     "fulgoran-sand",
--     "fulgoran-rock",
--     "fulgoran-paving",
--     "fulgoran-walls",
--     "fulgoran-conduit",
--     "fulgoran-machinery",
--     "oil-ocean-shallow",
--     "oil-ocean-deep",
--     "ammoniacal-ocean",
--     "ammoniacal-ocean-2",
--     "snow-flat",
--     "dust-flat",
--     "snow-crests",
--     "dust-crests",
--     "snow-lumpy",
--     "dust-lumpy",
--     "snow-patchy",
--     "dust-patchy",
--     "ice-rough",
--     "ice-smooth",
--     "ice-platform",
--     "brash-ice",
--     "frozen-concrete",
--     "frozen-hazard-concrete-left",
--     "frozen-hazard-concrete-right",
--     "frozen-refined-concrete",
--     "frozen-refined-hazard-concrete-left",
--     "frozen-refined-hazard-concrete-right"
-- }

-- space_age = sets.difference(sets.new(space_age), sets.new(bad))

-- -- Tiles that are only in space-age
-- local space_age_exclusive = sets.to_array(sets.difference(sets.new(space_age), sets.new(base)))

-- -- Tiles that are not land tiles
-- local non_land = {
--     "deepwater",
--     "deepwater-green",
--     "water",
--     "water-green",
--     "water-mud",
--     "water-shallow",
--     "water-wube",
-- }

-- -- Tiles that are not land tiles in Space Age and base
-- local space_age_non_land = {
--     "deepwater",
--     "deepwater-green",
--     "water",
--     "water-green",
--     "water-mud",
--     "water-shallow",
--     "water-wube",
--     "lava",
--     "lava-hot",
--     "wetland-yumako",
--     "wetland-jellynut",
--     "wetland-dead-skin",
--     "wetland-light-dead-skin",
--     "wetland-green-slime",
--     "wetland-light-green-slime",
--     "wetland-red-tentacle",
--     "wetland-pink-tentacle",
--     "wetland-blue-slime",
--     "gleba-deep-lake",
--     "oil-ocean-shallow",
--     "oil-ocean-deep",
--     "ammoniacal-ocean",
--     "ammoniacal-ocean-2",
--     "brash-ice",
-- }

-- -- Tiles that are not land tiles in Space Age only
-- local space_age_exclusive_non_land = sets.to_array(sets.difference(sets.new(space_age_non_land), sets.new(non_land)))

-- -- All land tiles in base
-- local land = sets.to_array(sets.difference(sets.new(base), sets.new(non_land)))

-- -- All land tiles in Space Age and base
-- local space_age_land = sets.to_array(sets.difference(sets.new(space_age), sets.new(space_age_non_land)))

-- -- All land tiles in Space Age only
-- local space_age_exclusive_land = sets.to_array(sets.difference(sets.new(space_age_exclusive), sets.new(space_age_non_land)))



data:extend({
    {
        type = "int-setting",
        name = "hextorio-trades-per-hex",
        setting_type = "runtime-global",
        default_value = 2,
        minimum_value = 0,
        maximum_value = 10,
    },
    {
        type = "double-setting",
        name = "hextorio-coin-trade-chance",
        setting_type = "runtime-global",
        default_value = 0.3,
        minimum_value = 0,
        maximum_value = 1.0,
    },
    {
        type = "double-setting",
        name = "hextorio-sell-trade-chance",
        setting_type = "runtime-global",
        default_value = 0.4,
        minimum_value = 0,
        maximum_value = 1.0,
    },
    {
        type = "double-setting",
        name = "hextorio-vault-chance",
        setting_type = "runtime-global",
        default_value = 0.01,
        minimum_value = 0,
        maximum_value = 1.0,
    },
    {
        type = "double-setting",
        name = "hextorio-tiles-per-quality",
        setting_type = "runtime-global",
        default_value = 8.0,
        minimum_value = 1.0,
    },
    {
        type = "double-setting",
        name = "hextorio-trade-volume-per-dist-exp",
        setting_type = "runtime-global",
        default_value = 1.2345, -- looks like an arbitrary number, but it's precisely what it should be by default because 10*1.2345^40 is close to the value of the atomic bomb
        minimum_value = 0.1,
        maximum_value = 10,
    },
    {
        type = "double-setting",
        name = "hextorio-trade-volume-per-dist-base",
        setting_type = "runtime-global",
        default_value = 10,
        minimum_value = 1,
        maximum_value = 1000,
    },
    {
        type = "string-setting",
        name = "hextorio-claimed-hex-tile",
        setting_type = "runtime-per-user",
        default_value = "refined-concrete",
        allowed_values = tile_names.space_age_land,
    },
    {
        type = "string-setting",
        name = "hextorio-edge-fill-tile",
        setting_type = "runtime-per-user",
        default_value = "black-refined-concrete",
        allowed_values = tile_names.space_age_land,
    },
    {
        type = "string-setting",
        name = "hextorio-grid-rotation-mode-nauvis",
        setting_type = "startup",
        default_value = "flat-top",
        allowed_values = {"random", "flat-top", "pointed-top"},
        order = "zaa",
    },
    {
        type = "double-setting",
        name = "hextorio-hex-size-nauvis",
        setting_type = "startup",
        default_value = 24,
        minimum_value = 8,
        maximum_value = 60,
        order = "zab",
    },
    {
        type = "int-setting",
        name = "hextorio-hex-stroke-width-nauvis",
        setting_type = "startup",
        default_value = 3,
        minimum_value = 2,
        maximum_value = 32,
        order = "zac",
    },
    {
        type = "string-setting",
        name = "hextorio-grid-rotation-mode-vulcanus",
        setting_type = "startup",
        default_value = "pointed-top",
        allowed_values = {"random", "flat-top", "pointed-top"},
        order = "zba",
    },
    {
        type = "double-setting",
        name = "hextorio-hex-size-vulcanus",
        setting_type = "startup",
        default_value = 40,
        minimum_value = 8,
        maximum_value = 60,
        order = "zbb",
    },
    {
        type = "int-setting",
        name = "hextorio-hex-stroke-width-vulcanus",
        setting_type = "startup",
        default_value = 3,
        minimum_value = 2,
        maximum_value = 32,
        order = "zbc",
    },
    {
        type = "string-setting",
        name = "hextorio-grid-rotation-mode-fulgora",
        setting_type = "startup",
        default_value = "pointed-top",
        allowed_values = {"random", "flat-top", "pointed-top"},
        order = "zca",
    },
    {
        type = "double-setting",
        name = "hextorio-hex-size-fulgora",
        setting_type = "startup",
        default_value = 15,
        minimum_value = 8,
        maximum_value = 60,
        order = "zcb",
    },
    {
        type = "int-setting",
        name = "hextorio-hex-stroke-width-fulgora",
        setting_type = "startup",
        default_value = 2,
        minimum_value = 2,
        maximum_value = 32,
        order = "zcc",
    },
    {
        type = "string-setting",
        name = "hextorio-grid-rotation-mode-gleba",
        setting_type = "startup",
        default_value = "pointed-top",
        allowed_values = {"random", "flat-top", "pointed-top"},
        order = "zda",
    },
    {
        type = "double-setting",
        name = "hextorio-hex-size-gleba",
        setting_type = "startup",
        default_value = 28,
        minimum_value = 8,
        maximum_value = 60,
        order = "zdb",
    },
    {
        type = "int-setting",
        name = "hextorio-hex-stroke-width-gleba",
        setting_type = "startup",
        default_value = 12,
        minimum_value = 2,
        maximum_value = 32,
        order = "zdc",
    },
    {
        type = "string-setting",
        name = "hextorio-grid-rotation-mode-aquilo",
        setting_type = "startup",
        default_value = "random",
        allowed_values = {"random", "flat-top", "pointed-top"},
        order = "zea",
    },
    {
        type = "double-setting",
        name = "hextorio-hex-size-aquilo",
        setting_type = "startup",
        default_value = 50,
        minimum_value = 8,
        maximum_value = 60,
        order = "zeb",
    },
    {
        type = "int-setting",
        name = "hextorio-hex-stroke-width-aquilo",
        setting_type = "startup",
        default_value = 30,
        minimum_value = 2,
        maximum_value = 32,
        order = "zec",
    },
})
